AWSTemplateFormatVersion: 2010-09-09
Description: VPC and Subnet Create

Metadata:
  AWS::CloudFormation::InterFace:
    ParameterGroups:
      - Label:
          default: Networck Configration
        Parameters:
          - VPCCIDR
          - PublicSubnetACIDR
          - PublicSubnetCCIDR
          - PrivateSubnetACIDR
          - PrivateSubnetCCIDR
    
    ParameterLabels:
      VPCCIDR:
        default: VPC CIDR
          
      PublicSubnetACIDR:
        default: PublicSubnetA CIDR
          
      PublicSubnetCCIDR:
        default: PublicSubnetC CIDR
          
      PrivateSubnetACIDR:
        default: PrivateSubnetA CIDR
          
      PrivateSubnetCCIDR:
        default: PrivateSubnetC CIDR

Parameters: 
  ProjectName:
    Type: String

  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stag
      - prod

  VPCCIDR:
    Type: String
    Default: 10.1.0.0/16
  
  PublicSubnetACIDR:
    Type: String
    Default: 10.1.10.0/24
  
  PublicSubnetCCIDR:
    Type: String
    Default: 10.1.20.0/24
  
  PrivateSubnetACIDR:
    Type: String
    Default: 10.1.100.0/24
  
  PrivateSubnetCCIDR:
    Type: String
    Default: 10.1.200.0/24

Resources:

# VPC Create
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-vpc'

# IGW Create
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-igw'

# IGW Attach
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

# Public SubnetA Create
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-northeast-1a'
      CidrBlock: !Ref PublicSubnetACIDR
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-a'

# Public SubnetC Create
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-northeast-1c'
      CidrBlock: !Ref PublicSubnetCCIDR
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-c'

# Private SubnetA Create
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-northeast-1a'
      CidrBlock: !Ref PrivateSubnetACIDR
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-a'

# Private SubnetC Create
  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'ap-northeast-1c'
      CidrBlock: !Ref PrivateSubnetCCIDR
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-c'

# Public RouteTableA Create
  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-public-route-table-a'

# Public RouteTableC Create
  PublicRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-public-route-table-c'

# Private RouteTableA Create
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-private-route-table-a'

# Private RouteTableC Create
  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${EnvironmentName}-private-route-table-c'

# PublicRouteA Create
  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

# PublicRouteC Create
  PublicRouteC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableC
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

# PublicRouteTable Associate SubnetA
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTableA

# PublicRouteTable Associate SubnetC
  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTableC

# PrivateRouteTable Associate SubnetA
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA

# PrivateRouteTable Associate SubnetC
  PrivateSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC

Outputs:

# VPC
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-vpc'
  
  VPCCIDR:
    Value: !Ref VPCCIDR
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-vpc-cidr'

# Subnet
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-a'
  
  PublicSubnetACIDR:
    Value: !Ref PublicSubnetACIDR
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-a-cidr'
  
  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-c'
  
  PublicSubnetCCIDR:
    Value: !Ref PublicSubnetCCIDR
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-subnet-c-cidr'
  
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-a'
  
  PrivateSubnetACIDR:
    Value: !Ref PrivateSubnetACIDR
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-a-cidr'
  
  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-c'
  
  PrivateSubnetCCIDR:
    Value: !Ref PrivateSubnetCCIDR
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-subnet-c-cidr'

# Route
  PublicRouteTableA:
    Value: !Ref PublicRouteTableA
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-route-a'
  
  PublicRouteTableC:
    Value: !Ref PublicRouteTableC
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-public-route-c'
  
  PrivateRouteTableA:
    Value: !Ref PrivateRouteTableA
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-route-a'
  
  PrivateRouteTableC:
    Value: !Ref PrivateRouteTableC
    Export:
      Name: !Sub '${ProjectName}-${EnvironmentName}-private-route-c'